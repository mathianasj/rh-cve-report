#!/usr/bin/env python

import sys
import requests
from datetime import datetime, timedelta
from pandas import read_excel

API_HOST = 'https://access.redhat.com/hydra/rest/securitydata'

def get_data(query):

    full_query = API_HOST + query
    r = requests.get(full_query)

    if r.status_code != 200:
        return None

    if not r.json():
        return None

    return r.json()

def loadSheet(filename):
    return read_excel(filename)

# load input
print(sys.argv)
inputData = loadSheet(sys.argv[1])
inputTitle = "Input" if sys.argv[2] == None else sys.argv[2]

# build cve to image map
in_cve_to_image = {}
in_cve_to_threat = {}
for cve in inputData.to_records():
    if in_cve_to_image.get(cve['CVE']) == None:
        in_cve_to_image[cve['CVE']] = [cve['Image']]
    else:
        in_cve_to_image[cve['CVE']].append(cve['Image'])
    
    in_cve_to_threat[cve['CVE']] = cve['Severity']

rh_cve = {}

f = open("report.html", "w")


# iterate the unique list and fetch rh cve info
f.write("<html><head></head><body><table>")

for cve in inputData['CVE'].unique():
    # get all unique cve data
    endpoint = '/cve/' + cve +'.json'
    
    data = get_data(endpoint)
    if data != None:
        f.write("<tr><td>")
        f.write("<h1>" + data['name'] + "</h1>")

        f.write("<h3>" + inputTitle + " Severity: " + in_cve_to_threat[data['name']] + "</h3>")
        f.write("<h3>RH Severity: " + data['threat_severity'] + "</h3>")
        f.write("<h2>RH Statement: </h2>")
        if data.get('statement') != None:
            f.write(data['statement'].replace("\n", "<br>"))

        f.write("<h2>Affected images</h2>")
        f.write("<ul>")

        for image in in_cve_to_image[data['name']]:
            f.write("<li>" + image + "</li>")

        f.write ('</ul>')

        f.write("<h2>Errata</h2>")
        f.write("<ul>")

        if data.get('affected_release') != None:
            for release in data['affected_release']:
                if "OpenShift" in release['product_name']:
                    f.write("<li>" + release['product_name'] + " (" + release['release_date'] + ")" + " (" + release['package'] + ") <a href='https://access.redhat.com/errata/" + release['advisory'] + "'>" + release['advisory'] + "</a></li>")

        f.write ('</ul>')
        f.write("</td></tr>")
        rh_cve[cve] = data
        
f.write("</table></body></html>")


f.close()